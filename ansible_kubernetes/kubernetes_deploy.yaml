- name: Install Kubernetes
  hosts: kubernetes-nodes
  tasks:
  - name: Update apt
    become: yes
    apt:
      update_cache: yes

  - name: Install Docker
    become: yes
    apt:
      name: docker.io
      state: present

  - name: Enable Docker to launch on boot
    become: yes
    systemd:
      name: docker
      enabled: yes

  - name: Verify Docker status
    become: yes
    systemd:
      name: docker
      state: started

  - name: Start Docker if not running
    become: yes
    systemd:
      name: docker
      state: started
    ignore_errors: yes

  - name: Install kubeadm, kubelet, and kubectl
    become: true
    apt:
      name: ['kubelet','kubeadm','kubectl']
      state: present
      allow_downgrades: yes

  - name: Create kubernetes user
    user:
      name: kubernetes
      shell: /bin/bash
      create_home: yes

  - name: Add kubernetes to sudoers
    lineinfile:
      dest: /etc/sudoers
      line: 'kubernetes ALL=(ALL) NOPASSWD:/usr/bin/kubectl, /usr/bin/kubeadm'
      validate: 'visudo -cf %s'
      insertafter: EOF
      state: present

  - name: Load containerd modules
    become: yes
    blockinfile:
      path: /etc/modules-load.d/containerd.conf
      block: |
        overlay
        br_netfilter

  - name: Load containerd modules with modprobe
    become: yes
    shell:
      cmd: "{{ item }}"
    with_items:
      - sudo modprobe overlay
      - sudo modprobe br_netfilter

  - name: Configure Kubernetes networking
    become: yes
    blockinfile:
      path: /etc/sysctl.d/kubernetes.conf
      block: |
        net.bridge.bridge-nf-call-ip6tables = 1
        net.bridge.bridge-nf-call-iptables = 1
        net.ipv4.ip_forward = 1

  - name: Reload sysctl configuration
    become: yes
    shell: sysctl --system

  - name: Configure kubelet cgroup driver
    become: yes
    blockinfile:
      path: /etc/default/kubelet
      block: |
        KUBELET_EXTRA_ARGS="--cgroup-driver=cgroupfs"

  - name: Reload kubelet configuration and restart kubelet
    become: yes
    systemd:
      name: kubelet
      daemon_reload: yes
      state: restarted

  - name: Configure Docker daemon
    become: yes
    blockinfile:
      path: /etc/docker/daemon.json
      block: |
        {
          "exec-opts": ["native.cgroupdriver=systemd"],
          "log-driver": "json-file",
          "log-opts": {
            "max-size": "100m"
          },
          "storage-driver": "overlay2"
        }

  - name: Reload Docker configuration and restart Docker
    become: yes
    systemd:
      name: docker
      daemon_reload: yes
      state: restarted

  - name: Configure kubelet service with KUBELET_EXTRA_ARGS
    become: yes
    blockinfile:
      path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
      block: |
        [Service]
        Environment="KUBELET_EXTRA_ARGS=--fail-swap-on=false"

  - name: Restart kubelet service
    become: yes
    systemd:
      name: kubelet
      state: restarted
      daemon_reload: yes

  - name: Initialize Kubernetes cluster
    become_user: root
    become: true
    command: kubeadm init --pod-network-cidr=10.244.0.0/16

  - name: Ensure the .kube directory exists
    file:
      path: /home/kubernetes/.kube
      state: directory
      mode: '0755'
      owner: kubernetes

  - name: Copy kubeconfig to user's home directory
    become: true
    copy:
      src: /etc/kubernetes/admin.conf
      dest: /home/kubernetes/.kube/config
      remote_src: yes
      owner: kubernetes
      mode: '0660'

  - name: Install flannel CNI
    become: true
    command: kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
    environment:
      KUBECONFIG: /home/kubernetes/.kube/config

  - name: Copy folder for the kubernetes user
    become_user: root
    command: "cp -R /home/ubuntu/infinidat-challenge/ /home/kubernetes"
  
  - name: change ownership to the kubernetes user
    become_user: root
    command: "chown -R kubernetes: /home/kubernetes/infinidat-challenge"

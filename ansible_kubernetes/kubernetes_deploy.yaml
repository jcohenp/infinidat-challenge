- name: Install Kubernetes
  hosts: kubernetes-nodes
  tasks:
  - name: Update apt
    become: yes
    apt:
      update_cache: yes

  - name: Install Docker
    become: yes
    apt:
      name: docker.io
      state: present

  - name: Enable Docker to launch on boot
    become: yes
    systemd:
      name: docker
      enabled: yes

  - name: Verify Docker status
    become: yes
    systemd:
      name: docker
      state: started

  - name: Start Docker if not running
    become: yes
    systemd:
      name: docker
      state: started
    ignore_errors: yes

  - name: Install required packages
    become: yes
    apt:
      name:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg
      state: present

  - name: Add Kubernetes GPG key
    become: yes
    shell: "curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg"
  
  - name: Add Kubernetes Repository
    apt_repository:
      repo: deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /
      state: present
      filename: kubernetes
      mode: 0600

  - name: Install kubeadm, kubelet, and kubectl
    become: true
    apt:
      name: ['kubelet','kubeadm','kubectl']
      state: present
      allow_downgrades: yes

  - name: Create kubernetes user
    user:
      name: kubernetes
      shell: /bin/bash
      create_home: yes

  - name: Add kubernetes to sudoers
    lineinfile:
      dest: /etc/sudoers
      line: 'kubernetes ALL=(ALL) NOPASSWD:/usr/bin/kubectl, /usr/bin/kubeadm'
      validate: 'visudo -cf %s'
      insertafter: EOF
      state: present

  - name: Add execute permission to the script
    become: yes
    file:
      path: prepare_cluster.sh
      mode: u+x

  - name: prepare cluster to init kubernetes
    become: yes
    command: "./prepare_cluster.sh"

  - name: Initialize Kubernetes cluster
    become_user: root
    become: true
    command: kubeadm init --pod-network-cidr=10.244.0.0/16

  - name: Ensure the .kube directory exists
    file:
      path: /home/kubernetes/.kube
      state: directory
      mode: '0755'
      owner: kubernetes

  - name: Copy kubeconfig to user's home directory
    become: true
    copy:
      src: /etc/kubernetes/admin.conf
      dest: /home/kubernetes/.kube/config
      remote_src: yes
      owner: kubernetes
      mode: '0660'

  - name: Install flannel CNI
    become: true
    command: kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
    environment:
      KUBECONFIG: /home/kubernetes/.kube/config

  - name: Copy folder for the kubernetes user
    become_user: root
    command: "cp -R /home/ubuntu/infinidat-challenge/ /home/kubernetes"
  
  - name: change ownership to the kubernetes user
    become_user: root
    command: "chown -R kubernetes: /home/kubernetes/infinidat-challenge"

  - name: Include flask-app role
    include_role:
      name: flask-app

  - name: Include monitoring role
    include_role:
      name: monitoring
